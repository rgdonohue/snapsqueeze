name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  build-and-release:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        python -m pytest tests/ --tb=short
        
    - name: Get version
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi
        
    - name: Update version in build script
      run: |
        sed -i '' 's/VERSION=".*"/VERSION="${{ steps.version.outputs.VERSION }}"/' scripts/build_dmg.sh
        
    - name: Build DMG
      run: |
        ./scripts/build_dmg.sh
        
    - name: Import Code-Signing Certificates
      if: env.MACOS_CERTIFICATE != ''
      uses: Apple-Actions/import-codesign-certs@v2
      with:
        p12-file-base64: ${{ secrets.MACOS_CERTIFICATE }}
        p12-password: ${{ secrets.MACOS_CERTIFICATE_PWD }}
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        
    - name: Sign DMG
      if: env.MACOS_CERTIFICATE != ''
      run: |
        # Sign the app bundle
        codesign --force --verify --verbose --sign "${{ secrets.MACOS_CERTIFICATE_NAME }}" \
          "build/SnapSqueeze.app"
        
        # Create a new signed DMG
        hdiutil create -srcfolder "build/SnapSqueeze.app" \
          -volname "SnapSqueeze" \
          -format UDZO \
          -imagekey zlib-level=9 \
          "dist/SnapSqueeze-${{ steps.version.outputs.VERSION }}-signed.dmg"
          
        # Sign the DMG
        codesign --force --verify --verbose --sign "${{ secrets.MACOS_CERTIFICATE_NAME }}" \
          "dist/SnapSqueeze-${{ steps.version.outputs.VERSION }}-signed.dmg"
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        
    - name: Notarize DMG
      if: env.MACOS_CERTIFICATE != '' && env.NOTARIZATION_PASSWORD != ''
      run: |
        # Submit for notarization
        xcrun notarytool submit "dist/SnapSqueeze-${{ steps.version.outputs.VERSION }}-signed.dmg" \
          --apple-id "${{ secrets.NOTARIZATION_USERNAME }}" \
          --password "${{ secrets.NOTARIZATION_PASSWORD }}" \
          --team-id "${{ secrets.TEAM_ID }}" \
          --wait
          
        # Staple the notarization
        xcrun stapler staple "dist/SnapSqueeze-${{ steps.version.outputs.VERSION }}-signed.dmg"
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        NOTARIZATION_PASSWORD: ${{ secrets.NOTARIZATION_PASSWORD }}
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.version.outputs.VERSION }}
        name: SnapSqueeze ${{ steps.version.outputs.VERSION }}
        draft: false
        prerelease: ${{ contains(steps.version.outputs.VERSION, 'beta') || contains(steps.version.outputs.VERSION, 'alpha') }}
        generate_release_notes: true
        files: |
          dist/*.dmg
          dist/*.sha256
        body: |
          ## SnapSqueeze ${{ steps.version.outputs.VERSION }}
          
          A macOS screenshot compression tool that automatically compresses screenshots before placing them on the clipboard.
          
          ### Installation
          1. Download `SnapSqueeze-${{ steps.version.outputs.VERSION }}.dmg`
          2. Open the DMG file
          3. Drag SnapSqueeze.app to your Applications folder
          4. Launch SnapSqueeze from Applications
          5. Grant screen recording permissions when prompted
          
          ### Usage
          - Press `Cmd+Option+4` to capture and compress a screen region
          - Use the menu bar icon to access settings and manual capture
          - Compressed images are automatically copied to your clipboard
          
          ### System Requirements
          - macOS 12.0 or later
          - Python 3.8+ (automatically detected)
          
          ### Security
          - All image processing is done locally on your machine
          - No data is transmitted to external servers
          - Open source and auditable
          
          ### Verification
          ```bash
          # Verify download integrity
          shasum -a 256 SnapSqueeze-${{ steps.version.outputs.VERSION }}.dmg
          ```
          
          Expected SHA256: See attached `.sha256` file
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: SnapSqueeze-${{ steps.version.outputs.VERSION }}
        path: |
          dist/*.dmg
          dist/*.sha256
        retention-days: 90